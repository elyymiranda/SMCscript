#!/bin/bash

# This script create all the structure for the GAMES-SMC calculations.
# Script made by Ely Miranda, PhD student at Physics Institute in Universidade de SÃ£o Paulo
# Last update: 07/02/2023
# Any question or suggestion write me: ely.miranda@usp.br :)

### Input important informations

if [ $# -eq 0 ]; then  # If no argument (input) is given, end the script.
    echo "No input provided"
    exit 1
fi
	
PATH_TO_SMC="$SMC/nuc/NucAtracPP.x"  # Track NucAtracPP in SMC folder
FOLDER=$(dirname $(readlink -f $1))  # Track the job folder
cp $SMC/nuc/PPandBASIS.txt $FOLDER

MOLECULE=$(grep "^MNAME" $1 | cut -d "=" -f 2 | sed 's/ //g') # Find molecule name in input
GROUP=$(grep "^GROUP" $1 | cut -d "=" -f 2 | sed 's/ //g')  # Find molecule point group symmetry in input
MVO=$(grep "^MVO" $1 | cut -d "=" -f 2)  # Find molecule required MV0'S (could be more than just one) in input
EXTRAC=$(grep "^EXTRAC" $1 | cut -d "=" -f 2 | sed 's/ //g')  # Find any required extra center in input
RPPLANE=$(grep "^RPLANE" $1 | cut -d "=" -f 2 | sed 's/ //g')  # Find molecule symmetry plane in input

GMODE=$(grep "^GMODE" $1 | cut -d "=" -f 2 | sed 's/ //g')  # Geometry in angstron or bohr
ILINE=$(grep -n " BEGIN_GEO" $1 | awk '{print $1}' | sed 's/[^0-9]*//g')  # Find the initial line of the states info
FLINE=$(grep -n " END_GEO" $1 | awk '{print $1}' | sed 's/[^0-9]*//g')  # Find the final line of the states info
sed -n "$((${ILINE}+1)),$((${FLINE}-1)) p" $1 > $FOLDER/geo  # Save the states info
if [[ $GMODE == 'ANGS' ]]; then  # If the geometry is given is angstron, we should change it for bohr
	perl -pe 's/\b(\d+\.)?\d+\b/$&*1.8897259886/ge' $FOLDER/geo | sed 's/[^0-9 -.]*//g' > $FOLDER/tmp  # Multiply the angs for 1.8897259886
       	mv $FOLDER/tmp $FOLDER/geo  # Save it as the new geo
fi

ILINE=$(grep -n " BEGIN_BASIS" $1 | awk '{print $1}' | sed 's/[^0-9]*//g')  # Find the initial line of the states info
FLINE=$(grep -n " END_BASIS" $1 | awk '{print $1}' | sed 's/[^0-9]*//g')  # Find the final line of the states info
sed -n "$((${ILINE}+1)),$((${FLINE}-1)) p" $1 > $FOLDER/basis  # Save the states info

NATOMS=$(wc -l $FOLDER/basis | awk '{print $1}') # Find the last line of the states info


### infbasic-nucgms input construction

echo "#!/bin/csh

set execNG = '$SMC/nuc/montarnucgms-alt5.x'

\$execNG <<fim
NATOMS = $NATOMS
EXTRAC = $EXTRAC
GROUP  = $GROUP
RPLANE = $RPPLANE
MVO    = 
GMSINP = gmssmc.inp
GMSOUT =
GMSDAT =
NUCINP = nuc.inp
MNAME  = $MOLECULE" > $FOLDER/infbasic-nucgms

cat $FOLDER/basis >> $FOLDER/infbasic-nucgms
echo '#EQUILIBRIUM GEOMETRY (BOHR) OF THE ATOMS LISTED ABOVE' >> $FOLDER/infbasic-nucgms
cat $FOLDER/geo >> $FOLDER/infbasic-nucgms
echo 'fim' >> $FOLDER/infbasic-nucgms


### infbasic-nucgms input running

echo 'Staring to generate nucgms inputs'
chmod +x $FOLDER/infbasic-nucgms
$FOLDER/infbasic-nucgms
echo 'End of this process'


### Nuc and gmssmc.inp inputs running

LINE=$(grep -n "DO NOT FORGET" $FOLDER/gmssmc.inp | awk '{print $1}' | sed 's/[^0-9]*//g')  # Find the line of occurance of this word
sed -i "${LINE}d" $FOLDER/gmssmc.inp  # Exclude the line
chmod +x $FOLDER/nuc.inp  # Make it executable
sed -i '2d' $FOLDER/nuc.inp  # Exclude the second line
sed -i "2i set RODA = ${PATH_TO_SMC}" $FOLDER/nuc.inp  # Write it in second line (find the NucAtrac)

echo "Running nuc.inp"
$FOLDER/nuc.inp
echo 'End of this process'

for i in $MVO; do
        echo "Running nucgms for MOV=$i"
        sed -i '3d' $FOLDER/gmssmc.inp
        sed -i "3 i \ \$SCF DIRSCF=.TRUE. MVOQ=$i \$END" $FOLDER/gmssmc.inp
        cp $FOLDER/gmssmc.inp $FOLDER/res-bhs${i}.inp
        cp $FOLDER/VNUC.FILE /tmp/res-bhs${i}.F77
        $SMC/gamess-smc/rungms res-bhs${i}.inp 00 1>& res-bhs${i}.log
        mv /tmp/res-bhs${i}.dat $FOLDER/res-bhs${i}.dat
        mv /tmp/res-bhs${i}.OCK $FOLDER/FOCK.FILE
        mv /tmp/res-bhs* $FOLDER/  2>/dev/null
        echo 'End of this process'
done

rm $FOLDER/*.F77 $FOLDER/*.F05 $FOLDER/geo $FOLDER/PPandBASIS.txt 2>/dev/null

